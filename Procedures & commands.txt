------------------------------------------------------------------
cd "app/src/main/java/com/system/guardian/dex_patch_build"

javac `
  -classpath "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar" `
  -d build\out `
  PatchOverride.java PatchInstaller.java

jar cf patch.jar -C build\out .
------------------------------------------------------------------


------------------------------------------------------------------
cd "app/src/main/java/com/system/guardian/dex_patch_build"

rmdir /s /q build
mkdir build\out

javac `
  -classpath "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar" `
  -d build\out `
  PatchOverride.java

jar cf patch.jar -C build\out .
------------------------------------------------------------------


------------------------------------------------------------------
.\grant_permissions.ps1
------------------------------------------------------------------


------------------------------------------------------------------
adb logcat -c
adb logcat | Tee-Object -Variable logs | Select-String "system.guardian" | Tee-Object guardian_logs.txt
adb shell am start -n com.system.guardian/.MainActivity
------------------------------------------------------------------


------------------------------------------------------------------
./gradlew clean
./gradlew app:assemble:debug
------------------------------------------------------------------


------------------------------------------------------------------
cd "app/src/main/java/com/system/guardian/dex_patch_build"

if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
New-Item -ItemType Directory -Path .\build\out

javac `
  -classpath "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar" `
  -d build\out `
  ..\CrashLogger.java `
  ..\core\LogUploader.java `
  ..\OverlayBlocker.java `
  PatchOverride.java

jar cf patch.jar -C build\out .
------------------------------------------------------------------


------------------------------------------------------------------
cd "app/src/main/java/com/system/guardian/dex_patch_build"

if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
New-Item -ItemType Directory -Path .\build\out

javac `
  -classpath "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar" `
  -d build\out `
  ..\CrashLogger.java `
  ..\OverlayBlocker.java `
  ..\core\LogUploader.java `
  ..\DexLoader.java `
  PatchOverride.java

jar cf patch.jar -C build\out .

------------------------------------------------------------------


------------------------------------------------------------------
cd "app/src/main/java/com/system/guardian/dex_patch_build"

if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
New-Item -ItemType Directory -Path .\build\out

javac `
  -classpath `
  "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar;`
  ..\..\..\..\..\build\intermediates\javac\debug\classes" `
  -d build\out `
  ..\CrashLogger.java `
  ..\OverlayBlocker.java `
  ..\core\LogUploader.java `
  ..\DexLoader.java `
  ..\ControlPollerService.java `
  ..\ControlPollerWorker.java `
  PatchOverride.java

------------------------------------------------------------------


------------------------------------------------------------------
cd "app/src/main/java/com/system/guardian/dex_patch_build"

if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
New-Item -ItemType Directory -Path .\build\out | Out-Null

$androidJar = "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar"
$appClasses = "..\..\..\..\..\build\intermediates\javac\debug\classes"

$libs = @(
  "..\..\..\..\..\app\libs\androidx.annotation.jar",
  "..\..\..\..\..\app\libs\androidx.core.jar",
  "..\..\..\..\..\app\libs\androidx.work-runtime.jar"
)

$classpath = "$androidJar;$appClasses;" + ($libs -join ";")

javac `
  -classpath $classpath `
  -d build\out `
  ..\CrashLogger.java `
  ..\OverlayBlocker.java `
  ..\core\LogUploader.java `
  ..\DexLoader.java `
  ..\ControlPollerService.java `
  ..\ControlPollerWorker.java `
  PatchOverride.java

if ($LASTEXITCODE -ne 0) {
    Write-Error "‚ùå Compilation failed. Check classpath and missing dependencies."
    exit 1
}

jar cf patch.jar -C build\out .

------------------------------------------------------------------


------------------------------------------------------------------
# =======================
# Patch Build Script üõ†Ô∏è
# =======================

# 1. Change to patch source directory
cd "app/src/main/java/com/system/guardian/dex_patch_build"

# 2. Clean previous build
if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
New-Item -ItemType Directory -Path .\build\out | Out-Null

# 3. Construct full classpath
$androidJar = "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar"
$appClasses = "..\..\..\..\..\build\intermediates\javac\debug\classes"

# Optional: put these `.jar` files in `app/libs/`
$libs = @(
  "..\..\..\..\..\app\libs\androidx.annotation.jar",
  "..\..\..\..\..\app\libs\androidx.core.jar",
  "..\..\..\..\..\app\libs\androidx.work-runtime.jar"
)

# Combine into classpath string
$classpath = "$androidJar;$appClasses;" + ($libs -join ";")

# 4. Compile all patch-related classes
javac `
  -classpath $classpath `
  -d build\out `
  ..\CrashLogger.java `
  ..\OverlayBlocker.java `
  ..\core\LogUploader.java `
  ..\DexLoader.java `
  ..\ControlPollerService.java `
  ..\ControlPollerWorker.java `
  PatchOverride.java

if ($LASTEXITCODE -ne 0) {
    Write-Error "‚ùå Compilation failed. Check classpath and missing dependencies."
    exit 1
}

# 5. Create JAR file from compiled classes
jar cf patch.jar -C build\out .

Write-Host "‚úÖ patch.jar created successfully!"

# 6. (Optional) Convert JAR to DEX (requires d8 in your PATH)
# d8 --output=patch.dex patch.jar

Write-Host "üéØ Patch build completed."
------------------------------------------------------------------
# Execute above bath scripts.
PowerShell -ExecutionPolicy Bypass -File build-patch.ps1



------------------------------------------------------------------
# Test adb
------------------------------------------------------------------
adb shell am force-stop com.system.guardian
adb shell monkey -p com.system.guardian -c android.intent.category.LAUNCHER 1

------------------------------------------------------------------


------------------------------------------------------------------
adb shell pm grant com.system.guardian android.permission.DISABLE_KEYGUARD
adb shell pm grant com.system.guardian android.permission.SYSTEM_ALERT_WINDOW
adb shell pm grant com.system.guardian android.permission.KILL_BACKGROUND_PROCESSES
adb shell pm grant com.system.guardian android.permission.FOREGROUND_SERVICE
adb shell pm grant com.system.guardian android.permission.RECEIVE_BOOT_COMPLETED
adb shell pm grant com.system.guardian android.permission.INTERNET
adb shell pm grant com.system.guardian android.permission.REQUEST_INSTALL_PACKAGES
adb shell pm grant com.system.guardian android.permission.BLUETOOTH_CONNECT
adb shell pm grant com.system.guardian android.permission.READ_EXTERNAL_STORAGE

adb shell appops set com.system.guardian SYSTEM_ALERT_WINDOW allow
adb shell appops set com.system.guardian android:get_usage_stats allow

adb shell settings put secure accessibility_enabled 1
adb shell settings put secure enabled_accessibility_services com.system.guardian/.InterceptorService

adb shell am broadcast -a android.intent.action.BOOT_COMPLETED -p com.system.guardian

adb shell monkey -p com.system.guardian -c android.intent.category.LAUNCHER 1

------------------------------------------------------------------

PowerShell -ExecutionPolicy Bypass -File build-patch.ps1

------------------------------------------------------------------
Expand-Archive -LiteralPath "C:\Users\dell\Downloads\Compressed\interceptor_final_project_2\interceptor_fixed_with_main\watu.apk" -DestinationPath ".\watu_apk_contents"


------------------------------------------------------------------
# =============================
# PATCH JAR BUILDER (FINAL)
# =============================

Write-Host "`n=== Starting Patch JAR Build ===`n"

# Paths
$projectRoot = Get-Location
$patchSrc = "app\src\main\java\com\system\guardian\dex_patch_build"
$buildOut = "$patchSrc\build\out"
$libsDir = "$projectRoot\app\libs"
$gradleCache = "$env:USERPROFILE\.gradle\caches\modules-2\files-2.1"
$androidJar = "C:\Users\dell\AppData\Local\Android\Sdk\platforms\android-35\android.jar"
$appClasses = "$projectRoot\app\build\intermediates\javac\debug\compileDebugJavaWithJavac\classes"

# Dependencies (only core + work)
$dependencies = @(
    @{ group = "androidx.core"; name = "core"; version = "1.16.0" },
    @{ group = "androidx.work"; name = "work-runtime"; version = "2.10.0" },
    @{ group = "com.google.guava"; name = "guava"; version = "31.1-android" },
    @{ group = "org.jetbrains.kotlin"; name = "kotlin-stdlib"; version = "1.9.10" },
    @{ group = "androidx.annotation"; name = "annotation"; version = "1.7.1" }
)

# Step 1: Ensure libs dir
if (-not (Test-Path $libsDir)) {
    New-Item -ItemType Directory -Path $libsDir | Out-Null
    Write-Host "Created app/libs"
}

# Step 2: Extract AAR ‚Üí classes.jar ‚Üí app/libs
foreach ($dep in $dependencies) {
    $groupPath = $dep.group
    $versionPath = Join-Path (Join-Path (Join-Path $gradleCache $groupPath) $dep.name) $dep.version
    if (-not (Test-Path $versionPath)) {
        Write-Error "‚ùå Missing: $versionPath"
        continue
    }

    $hashFolder = Get-ChildItem -Directory $versionPath | Select-Object -First 1
    if (-not $hashFolder) {
        Write-Error "‚ùå No hash folder in: $versionPath"
        continue
    }

    $aarFile = Get-ChildItem -Path $hashFolder.FullName -Filter "*.aar" | Select-Object -First 1
    if (-not $aarFile) {
        Write-Error "‚ùå No AAR file for $($dep.name)"
        continue
    }

    $extractPath = Join-Path $hashFolder.FullName "extract"
    $zipAar = "$($aarFile.FullName).zip"
    Copy-Item -Path $aarFile.FullName -Destination $zipAar -Force
    Expand-Archive -Force -Path $zipAar -DestinationPath $extractPath
    Remove-Item $zipAar -Force

    $classesJar = Join-Path $extractPath "classes.jar"
    if (Test-Path $classesJar) {
        $dest = Join-Path $libsDir "$($dep.name).jar"
        Copy-Item $classesJar $dest -Force
        Write-Host "‚úÖ Extracted $($dep.name).jar"
    } else {
        Write-Error "‚ùå No classes.jar in $($dep.name)"
    }
}

# Step 3: Clean build output
Set-Location $patchSrc
if (Test-Path .\build) { Remove-Item -Recurse -Force .\build }
New-Item -ItemType Directory -Path .\build\out | Out-Null

# Step 4: Build classpath
$libJars = Get-ChildItem "$libsDir\*.jar" | ForEach-Object { $_.FullName }
$classpath = "$androidJar;$appClasses;" + ($libJars -join ";")

# Step 5: Compile only required patch classes
$javacArgs = @(
    "-classpath", $classpath,
    "-d", "build\out",
    "..\CrashLogger.java",
    "..\OverlayBlocker.java",
    "..\DexLoader.java",
    "..\NetworkUtils.java",
    "..\GuardianStateCache.java",
    "..\core\LogUploader.java",
    "..\firebase\GuardianMessagingService.java",
    "..\dex_patch_build\PatchOverride.java"
)

# Step 5: Compile
# $javacArgs = @(
#    "-classpath", $classpath,
#    "-d", "build\out",
#    "..\CrashLogger.java",
#    "..\OverlayBlocker.java",
#    "..\core\LogUploader.java",
#    "..\DexLoader.java",
#    "..\ControlPollerService.java",
#    "..\ControlPollerWorker.java",
#    "..\NetworkUtils.java",
#    "..\GuardianStateCache.java",
#    "..\dex_patch_build\PatchOverride.java",
#    "..\dex_patch_build\PatchInstaller.java",
#    "..\dex_patch_build\FakeWatuSimulator.java",
#    "..\dex_patch_build\FakeGuardActivity.java"
#)

Write-Host "Compiling patch classes..."
& javac @javacArgs

if ($LASTEXITCODE -ne 0) {
    Write-Error "‚ùå Compilation failed"
    exit 1
}

# Step 6: Create patch.jar
Write-Host "Packaging patch.jar..."
jar cf patch.jar -C build\out .

if (Test-Path ".\patch.jar") {
    Write-Host "‚úÖ patch.jar created successfully"
} else {
    Write-Error "‚ùå Failed to create patch.jar"
    exit 1
}

Write-Host "`nüéØ Patch JAR Build Completed.`n"
------------------------------------------------------------------

PowerShell -ExecutionPolicy Bypass -File build-patch.ps1

------------------------------------------------------------------
cd C:\Users\dell\Downloads\gradle-8.14-all\gradle-8.14\bin
set PATH=C:\Users\dell\Downloads\gradle-8.14-all\gradle-8.14\bin;%PATH%

cd C:\Users\dell\Downloads\Compressed\interceptor_final_project_2\interceptor_fixed_with_main
C:\Users\dell\Downloads\gradle-8.14-all\gradle-8.14\bin\gradle wrapper
------------------------------------------------------------------

.\gradlew :app:packagePatchJarDebug
